#!/usr/bin/env node

var env = process.env.NODE_ENV || "development";
var config = require(__dirname + '/../config/config.json')[env];
var debug = require('debug')('cupireservas');
var express = require('express');
var app = require('../app');
var https = require('https');
var http = require('http');
var fs = require('fs');
var path = require('path');
var Promise = require('bluebird');
var httpsPort = (config.server.https.port || 443);
var httpPort = (config.server.http.port || 80);

var privateKey;
var certificate;


if (env === "production") {
	privateKey = fs.readFileSync('/etc/pki/tls/private/virtual/myserver.key');
	certificate = fs.readFileSync('/etc/pki/tls/certs/virtual/STAR_virtual_uniandes_edu_co.crt');
} else {
	privateKey = fs.readFileSync(path.join("config", "sslcert", "server.key"));
	certificate = fs.readFileSync(path.join("config", "sslcert", "server.crt"));
}
var credentials = {
	key: privateKey,
	cert: certificate
};


	// Se crea una app de express para redireccionar el tr√°fico http a https.
	var httpServer;
	if(env === "production"){
		/* listen (start app with node server.js) ====================================== */
		var httpsServer = https.createServer(credentials, app);
		httpsServer.listen(httpsPort, function() {
			console.log("https server listen on ", httpsPort, "port");
		});

		var redirectApp = express();
		redirectApp.all('*', function(req, res) {
			return res.redirect("https://" + req.headers.host + req.url);
		});
		httpServer = http.createServer(redirectApp);
		httpServer.listen(httpPort, function() {
			console.log("http server listen on", httpPort, "port");
		});
	} else {
		httpServer = http.createServer(app); //https.createServer(credentials, app); 
		httpServer.listen(httpPort, function() {
			console.log("http server listen on", httpPort, "port");
		});
	}
